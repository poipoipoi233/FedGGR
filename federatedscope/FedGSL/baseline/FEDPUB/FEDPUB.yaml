# Whether to use GPU
use_gpu: True

# Deciding which GPU to use
device: 0

# Federate learning related options
federate:
  # `standalone` or `distributed`
  mode: standalone
  # Evaluate in Server or Client test set
  make_global_eval: False
  # Number of dataset being split
  client_num: 3
  # Number of communication round
  total_round_num: 800
  #Specify the method as FEDPUB
  method: fedpub

# Dataset related options
data:
  # Root directory where the data stored
  root: data/
  # Dataset name
  type: computers
  # Use Random_splitter to split `Cora`
  splitter: 'random'

dataloader:
  # Type of sampler
  type: pyg
  # Use fullbatch training, batch_size should be `1`
  batch_size: 1

# Model related options
model:
  # Model type
  type: gnn_MaskedGCN
  # Hidden dim
  hidden: 64
  # Dropout rate
  dropout: 0.5
  # Number of Class of `Cora`
  out_channels: 10

  # PERSONALIZED SUBGRAPH FEDERATED LEARNING (FEDPUB) related options
  fedpub:
    laye_mask_one: True #Determine the initialization method of the mask in MaskedGCNConv
    clsf_mask_one: True #Determine the initialization method of the mask of MaskedLinear (the last layer classifier on the client side)
    no_clsf_mask: False
    mask_rank: -1
    mask_drop: False
    mask_drop_ratio: 0.5
    mask_noise: False
    n_proxy: 5

    l1: 1e-3
    loc_l2: 1e-3
    agg_norm: "exp"
    cluster: False
    mask_aggr: False #Personal opinion: This variable controls whether to aggregate the mask when the server generates the global model
    norm_scale: 10

personalization:
  # skip_stat and skip_mask
  local_param: ['mask', 'pre', 'pos', 'running', 'tracked']

# Criterion related options
criterion:
  # Criterion type
  type: CrossEntropyLoss

# Trainer related options
trainer:
  type: fedpub_trainer

# Train related options
train:
  # Number of local update steps
  local_update_steps: 3
  # Optimizer related options
  optimizer:
    # Learning rate
    lr: 1e-3
    # Weight decay
    weight_decay: 5e-4
    # Optimizer type
    type: SGD

# Evaluation related options
eval:
  # Frequency of evaluation
  freq: 1
  # Evaluation metrics, accuracy and number of correct items
  metrics: ['acc', 'correct']
  # metrics for uodate best result
  best_res_update_round_wise_key: 'val_acc'

early_stop:
  patience: 200
  improve_indicator_mode: best
  the_smaller_the_better: False


